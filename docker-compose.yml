version: '3'

networks:
  my_server:
    ipam:
      config:
        - subnet: ${subnet}

services:

  nginx:
    container_name: nginx
    image:  "nginx:${nginx_version}"
    networks:
      my_server:
        ipv4_address: ${nginx_ip}
    ports:
      - ${nginx_port}:80
    
  nginx_prometheus_exporter:
    container_name: nginx_exporter
    image:  "fish/nginx-exporter:${nginx_exporter_version}"
    networks:
      my_server:
        ipv4_address: ${nginx_exporter_ip}
    ports:
      - ${nginx_exporter_port}:9113
    command:
      - '-nginx.scrape_uri=http://${nginx_ip}:80/'
    depends_on:
      - nginx


  prometheus:
    container_name: prometheus
    image: "prom/prometheus:${promethues_version}"
    networks:
      my_server:
        ipv4_address: ${promethues_ip}
    ports:
    - ${promethues_port}:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    - ./prometheus/alert.rules:/etc/prometheus/alert.rules
    depends_on:
      - nginx
      - nginx_exporter
    

  alertmanager:
    container_name: alertmanager
    image: "prom/alertmanager:${alert_manager_version}"
    networks:
      my_server:
        ipv4_address: ${alert_manager_ip}
    ports:
      - ${alert_manager_port}:9093
    volumes:
      - "./alertmanager:/config"
    restart: always
    command: --config.file=/config/config.yml --log.level=debug
    depends_on:
      - prometheus
